#!/usr/bin/python

#    Licensed to the Apache Software Foundation (ASF) under one
#    or more contributor license agreements.  See the NOTICE file
#    distributed with this work for additional information
#    regarding copyright ownership.  The ASF licenses this file
#    to you under the Apache License, Version 2.0 (the
#    "License"); you may not use this file except in compliance
#    with the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing,
#    software distributed under the License is distributed on an
#    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
#    KIND, either express or implied.  See the License for the
#    specific language governing permissions and limitations
#    under the License.
#
#    Contributor: Kyo Lee kyo.lee@eucalyptus.com

import re
import sys
import xmlrpclib
import metaleuca
from metaleuca import *
from optparse import OptionParser

def main():

	print "METALEUCA ENABLE NETBOOT"

	parser = OptionParser()
	parser.add_option("-n", "--name", dest="name", help="name of the system")
	parser.add_option("-i", "--ip", dest="ip", help="ip of the system")
	(options, args) = parser.parse_args()

	metaleuca = Metaleuca();
	server, token = metaleuca.connect()

	if options.name is None and options.ip is None:
		print "Need Input name or ip; Use --help Option"
		exit()

	if options.name is not None:
		if not metaleuca.validate_system_by_name(server, options.name):
			print "Invalid Input name: " + options.name
			exit()

	if options.ip is not None:
		if not metaleuca.validate_system_by_ip(server, options.ip):
			print "Invalid Input ip: " + options.ip
			exit()

	if options.ip is not None:
		name = metaleuca.get_system_name_found_by_ip(server, options.ip)
		print "Name: " + name + " Ip: " + options.ip
		metaleuca.change_system_found_by_name_set_its_netboot_enabled(server, token, name, "True")
	else:
		metaleuca.change_system_found_by_name_set_its_netboot_enabled(server, token, options.name, "True")

if __name__ == "__main__":
    main()
    exit

