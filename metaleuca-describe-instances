#!/usr/bin/python

#    Licensed to the Apache Software Foundation (ASF) under one
#    or more contributor license agreements.  See the NOTICE file
#    distributed with this work for additional information
#    regarding copyright ownership.  The ASF licenses this file
#    to you under the Apache License, Version 2.0 (the
#    "License"); you may not use this file except in compliance
#    with the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing,
#    software distributed under the License is distributed on an
#    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
#    KIND, either express or implied.  See the License for the
#    specific language governing permissions and limitations
#    under the License.
#
#    Contributor: Kyo Lee kyo.lee@eucalyptus.com

import re
import sys
import xmlrpclib
import commands
import resource_manager
from resource_manager import *
from optparse import OptionParser

def main():

	print "METALEUCA DESCRIBE INSTANCE"

	parser = OptionParser()
	parser.add_option("-u", "--user", dest="user", help="user name")
	(options, args) = parser.parse_args()

	rmanager = ResourceManager();

	if options.user is None:
		print "Need Input user: -u <user>"
		exit()

	if options.user == "_ALL":
		print "Invalid Input user: " + options.user
		exit()

	system_buf =  rmanager.display_user_by_name(options.user)

	system_list = system_buf.split('\n')
	for system in system_list:
		ip = system.split()[0]

		temp_buf = commands.getoutput("./metaleuca-describe-systems | grep " + ip)
		if len(temp_buf) > 0:
			instance_list = temp_buf.split()
			name = instance_list[1]
			profile = instance_list[9]
			status = "unknown"
			if str(instance_list[13]) == "True":
				status = "pending"
			else:
				status = "running"

			print "INSTANCE " + name + " " + profile + " " + ip + " " + status



if __name__ == "__main__":
    main()
    exit

